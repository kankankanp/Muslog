# --- Builder Stage ---
FROM golang:1.23-alpine AS builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY ../../go.mod ../../go.sum ./
# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source code from the current directory to the Working Directory inside the container
COPY cmd/scheduler/main.go ./cmd/scheduler/main.go

# Build the Go app
# -o scheduler: output file name
# ./cmd/scheduler: package to build
RUN CGO_ENABLED=0 GOOS=linux go build -o scheduler ./cmd/scheduler

# --- Runner Stage ---
FROM alpine:latest

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/scheduler .

# Command to run the executable
CMD ["./scheduler"]
